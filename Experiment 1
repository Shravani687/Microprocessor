section .data     msg1 db 10,13, "Enter 5 64 bit numbers",10,13    
len1 equ $-msg1     msg2
db 10,13, "Entered 5 64 bit numbers",10,13     len2 equ 
$-msg2

section .bss     
array resq 5    
counter resb 1

section .text   
global _start
_start:
    ; display    
mov rax, 1    
mov rdi, 1
    mov rsi, msg1    
mov rdx, len1    
syscall
    ; accept     mov byte
[counter], 5
    xor rbx, rbx     
loop1:
        mov rax, 0

        mov rdi, 0
        lea rsi, [array + rbx*8] ; multiply index by 8 to access 64-bit numbers       
mov rdx, 8         syscall         add rbx, 1         dec byte [counter]         jnz
loop1
    ; display    
mov rax, 1    
mov rdi, 1   
mov rsi, msg2    
mov rdx, len2    
syscall
    ; display entered numbers    
mov byte [counter], 5   
xor rbx, rbx
    loop2:         mov rax, 1     
mov rdi, 1       
lea rsi, [array + rbx*8]       mov 
rdx, 8         syscall         add 
rbx, 1
        dec byte [counter]       
jnz loop2
    ; exit system call    
mov rax, 60     xor 
rdi, rdi    syscall
